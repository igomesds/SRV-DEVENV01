//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.0.
// 
namespace ProxyTest.localhost {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AppServiceSoap", Namespace="http://www.wrox.com.br/services")]
    public class AppService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public AppService() {
            this.Url = "http://localhost/ProWebServices/AppService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.wrox.com.br/services/SetAppState", RequestNamespace="http://www.wrox.com.br/services", ResponseNamespace="http://www.wrox.com.br/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetAppState(string key, string value) {
            this.Invoke("SetAppState", new object[] {
                        key,
                        value});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetAppState(string key, string value, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetAppState", new object[] {
                        key,
                        value}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetAppState(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.wrox.com.br/services/GetAppState", RequestNamespace="http://www.wrox.com.br/services", ResponseNamespace="http://www.wrox.com.br/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppState(string key, int delay) {
            object[] results = this.Invoke("GetAppState", new object[] {
                        key, delay});
			System.Threading.Thread.Sleep(delay);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppState(string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppState", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetAppState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.wrox.com.br/services/GetAppSettings", RequestNamespace="http://www.wrox.com.br/services", ResponseNamespace="http://www.wrox.com.br/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppSettings(string key, int delay) {
            object[] results = this.Invoke("GetAppSettings", new object[] {
                        key,
                        delay});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAppSettings(string key, int delay, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAppSettings", new object[] {
                        key,
                        delay}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetAppSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
